@startuml
title
    Calypsonet - calypsonet-terminal-calypso-crypto-legacysam-java-api - 0.1.+ (2022-10-27) v3
end title

' == THEME ==

'Couleurs issues de : https://htmlcolorcodes.com/fr/tableau-de-couleur/tableau-de-couleur-design-plat/
!define C_GREY1 F8F9F9
!define C_GREY2 F2F3F4
!define C_GREY3 E5E7E9
!define C_GREY4 D7DBDD
!define C_GREY5 CACFD2
!define C_GREY6 BDC3C7
!define C_LINK 3498DB
!define C_USE 27AE60

' -- Styles that don't work with new version of plantuml --
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
' -- END --

skinparam ClassBorderThickness 2
skinparam ArrowThickness 2

' Yellow
skinparam ClassBackgroundColor #FEFECE
skinparam ClassBorderColor #D4AC0D
' Red
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
' Purple
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
' blue
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
' Green
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
' Grey
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype

' == CONTENT ==

legend top
    __Colors legend__ :
    * __External public API references__ :
    ** <back:yellow>**calypsonet-terminal-reader-java-api**</back>
    ** <back:pink>**calypsonet-terminal-calypso-java-api**</back>
end legend

package "org.calypsonet.terminal.calypso.sam.legacy" as api {
    +class "**final** LegacySamApiProperties" as ApiProperties {
        +{static} **final** String VERSION
    }
    +interface "<<<back:pink>CalypsoLegacySam</back>>>\nLegacySam" as LegacySam {
        +Integer getEventCounter (int eventCounterNumber)
        +SortedMap<Integer, Integer> getEventCounters ()

        +Integer getEventCeiling (int eventCeilingNumber)
        +SortedMap<Integer, Integer> getEventCeilings ()
    }
    +interface LegacySamSecuritySetting {
        +LegacySamSecuritySetting setControlSamResource (<back:yellow>CardReader</back> samReader, LegacySam calypsoSam)
    }
    +interface LegacySamTransactionManager<T extends LegacySamTransactionManager<T>> {
        +<back:yellow>CardReader</back> getSamReader ()
        +LegacySam getCalypsoSam ()
        +List<byte[]> getTransactionAuditData ()
        +T processCommands ()
    }
    +interface LegacySamReadTransactionManager<T extends LegacySamReadTransactionManager<T>> extends LegacySamTransactionManager {
        +T prepareReadSamParameters ()

        +T prepareReadCaadRecord (int caadRecordNumber)
        +T prepareReadCaadRecords (int fromCaadRecordNumber, int toCaadRecordNumber)

        +T prepareReadSystemKeyParameters (LegacySystemKey systemKey)

        +T prepareReadWorkKeyParameter (int workKeyRecordNumber)
        +T prepareReadWorkKeyParameters (int fromWorkKeyRecordNumber, int toWorkKeyRecordNumber)

        +T prepareReadWorkKeyParameter (byte workKeyKif, byte workKeyKvc)

        +T prepareReadEventCounter (int eventCounterNumber)
        +T prepareReadEventCounters (int fromEventCounterNumber, int toEventCounterNumber)

        +T prepareReadEventCeiling (int eventCeilingNumber)
        +T prepareReadEventCeilings (int fromEventCeilingNumber, int toEventCeilingNumber)
    }
    +interface LegacySamFreeWriteTransactionManager<T extends LegacySamFreeWriteTransactionManager<T>> extends LegacySamTransactionManager {
        +T prepareWriteExternalPlainWorkKey (byte workKeyKif, byte workKeyKvc, byte[] workKeyParameters, byte[] workKeyValue)
        +T prepareWriteRandomlyGeneratedWorkKey (byte workKeyKif, byte workKeyKvc, byte[] workKeyParameters)
    }
    +interface LegacySamSecureReadTransactionManager extends LegacySamReadTransactionManager {
        +LegacySamSecuritySetting getSecuritySetting ()
    }
    +interface LegacySamFreeTransactionManager extends LegacySamReadTransactionManager, LegacySamFreeWriteTransactionManager {
        +LegacySamFreeTransactionManager prepareComputeSignature (CommonSignatureComputationData<?> data)
        +LegacySamFreeTransactionManager prepareVerifySignature (CommonSignatureVerificationData<?> data)
    }
    +interface LegacySamWriteTransactionManager<T extends LegacySamWriteTransactionManager<T>> extends LegacySamFreeWriteTransactionManager {
        +T prepareWriteExternalPlainWorkKey (byte workKeyKif, byte workKeyKvc, byte[] workKeyParameters, byte[] workKeyValue)
        +T prepareWriteRandomlyGeneratedWorkKey (byte workKeyKif, byte workKeyKvc, byte[] workKeyParameters)

        +T prepareWriteSamParameters (byte[] parameters)
        +T prepareWriteCaadRecord (int caadRecordNumber, byte[] caad)

        +T prepareWriteTransferredCipheredSystemKey (LegacySystemKey sourceSystemKey, byte sourceSystemKeyKif, byte sourceSystemKeyKvc)
        +T prepareWriteTransferredPlainWorkKey (byte sourceWorkKeyKif, byte sourceWorkKeyKvc, byte[] workKeyParameters)
        +T prepareWriteTransferredCipheredWorkKey (byte sourceWorkKeyKif, byte sourceWorkKeyKvc, byte[] workKeyParameters, byte cipheringSystemKeyKvc)

        +T prepareWriteEventCeiling (int eventCeilingNumber, int newValue)
        +T prepareWriteEventCeilings (int fromEventCeilingNumber, List<Integer> newValues)
    }
    +interface LegacySamSecureWriteTransactionManager extends LegacySamWriteTransactionManager {
        +LegacySamSecuritySetting getSecuritySetting ()
    }
    +interface LegacyTargetSamStaticTransactionManager extends LegacySamTransactionManager {
        +LegacyTargetSamStaticTransactionManager importCommands (String cipheredSamCommands)
    }
    +interface LegacyControlSamStaticTransactionManager extends LegacySamWriteTransactionManager {
        +LegacyControlSamStaticTransactionManager prepareGiveTargetSamPseudoRandom (? staticRandom)
        +String exportCommands ()
    }
}

' Associations

LegacySamTransactionManager .right.> LegacySam #C_LINK : provide >

LegacySamSecureReadTransactionManager ..> LegacySamSecuritySetting #C_LINK : provide >
LegacySamSecureWriteTransactionManager .left.> LegacySamSecuritySetting #C_LINK : provide >

' == LAYOUT ==

interface LegacySam <<purple>>

interface LegacySamSecuritySetting <<purple>>

' == STYLE ==

package api #C_GREY1 {}


@enduml